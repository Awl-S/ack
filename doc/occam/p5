.NH
Conclusions
.PP
Writing the compiler was very straightforward using the LLgen parser generator.
Its extended grammar and its way of conflict resolving were of great use to us,
especially
the indentation handling could be implemented quite easily. The automatic
error recovery given by LLgen took a great weight of our shoulders.
.PP
A set of parallelism simulation routines makes implementing \fBPAR\fP constructs
very simple. And we consider it a necessity to have such a layer to shield the
compiler writer from these details.
.PP
The translation to EM code was fairly direct, no great tricks were needed to
make things work. Only the different sizes of words and pointers that are given
as parameters to the compiler must be carefully watched. Variables or pointers
must sometimes be handled with double word instructions for different word or
pointer sizes.
