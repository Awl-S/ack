.\" $Header$
.TH EM_CG VI
.ad
.SH NAME
em_cg \- EM to assembly code translator
.SH SYNOPSIS
em_cg [-d\fIn\fP] [-p\fIn\fP] [-w\fIn\fP] [-u\fIfile\fP] [ infile [ outfile ] ]
.SH DESCRIPTION
Em_cg reads a compact EM-program, argument or standard input,
and produces an assembly program on argument or standard output
for the machine that is in its name.
Flags recognized are:
.IP -d\fIn\fP
Run in debugging mode, debugging level \fIn\fP,
only possible when the translator is compiled in the right way.
.IP -p\fIn\fP
Set the ply to \fIn\fP, default 1.
The ply is the maximum lookahead depth the code generator may take.
Effects of this flag are machine dependent.
.IP -w\fIn\fP
Set the weight percentage for size to \fIn\fP %, default is 50.
This sets the size/time tradeoff in the codegenerator.
Effects are again machine dependent.
.IP -u\fIfile\fP
Take the \fIfile\fP as a bitmap giving 1 bits for untested code rules
and write the \fIfile\fP at end of code generation,
substituting zero bits for rules used.
Give a list of untested rules on standard error, unless the -u
was given as -U.
Only possible if the -d flag was given to cgg(VI).
.SH FILES
code	If the -c flag was given to cgg(VI)
.SH "SEE ALSO"
ack(I)
.br
cgg(VI)
.PD 0
.IP [1]
A.S. Tanenbaum, Hans van Staveren, Ed Keizer and Johan
Stevenson "Description of a machine architecture for use with
block structured languages" Informatica report IR-81.
.SH AUTHOR
Hans van Staveren, Vrije Universiteit
