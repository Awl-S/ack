# $Revision 2.2$
var w=4
var p=4
var s=2
var l=4
var f=4
var d=8
var NAME=m68k4
var M=m68k4
var LIB=lib/m68k4/tail_
var RT=lib/m68k4/head_
var INCLUDES=-I{EM}/include -I/usr/include
name be
	from .m
	to .o
	program {EM}/lib/{M}/cg
	args <
	stdout
	need .e
end
name asld
	from .s.a.o
	to .out
	program {EM}/lib/m68k2/as
	mapflag -l* LNAME={EM}/{LIB}*
	mapflag -d* LFLAG={LFLAG?} -d*
	mapflag -s* LFLAG={LFLAG?} -s*
	mapflag -n*
	mapflag -i*
	args {LFLAG?} (.e:{HEAD}={EM}/{RT}em) \
({RTS}:.c={EM}/{RT}cc) ({RTS}:.p={EM}/{RT}pc) -o > < \
(.p:{TAIL}={EM}/{LIB}pc) (.c:{TAIL}={EM}/{LIB}cc.1s {EM}/{LIB}cc.2g) \
(.e:{TAIL}={EM}/{LIB}em {EM}/{LIB}mon {EM}/lib/{M}/end_em)
	prep cond
	linker
end
name cv
	from .out
	to .cv
	program {EM}/lib/m68k2/cv
	args < >
	outfile a.out
end
