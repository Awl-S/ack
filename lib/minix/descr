# $Revision$
var w=2
var p=2
var s=2
var l=4
var f=4
var d=8
var NAME=minix
var M=i86
var LIB=lib/{M}/tail_
var RT=lib/{M}/head_
var MRT=lib/minix/head_
var MLIB=lib/minix/tail_
var CPP_F=-Dunix -DACK -Di8088
var INCLUDES=-I{EM}/lib/minix/include
var ALIGN=-a0:2 -a1:16 -a2:2 -a3:2
var CC_ALIGN=-VS2U2
var C_LIB={EM}/{MLIB}cc.1s {EM}/{MLIB}cc.2g
var OLD_C_LIB={C_LIB}
name be
	from .m.g
	to .s
	program {EM}/lib/{M}/cg
	args <
	stdout
	need .e
end
name as
	from .s.so
	to .o
	program {EM}/lib/{M}/as
	args - -o > <
	prep cond
end
name led
	from .o.a
	to .out
	program {EM}/lib/em_led
	mapflag -l* LNAME={EM}/{MLIB}*
	mapflag -i SEPID=-b1:0
	mapflag -fp LIBFP={EM}/{LIB}fp
	mapflag -ansi C_LIB={EM}/{MLIB}ac
	args {ALIGN} {SEPID?} \
		(.e:{HEAD}={EM}/{MRT}em) \
		({RTS}:.ocm.b={EM}/{MRT}cc) \
		({RTS}{ANSI?}:.c={EM}/{MRT}cc) \
		({RTS}{ANSI?}:.cansi={EM}/{MRT}ac) \
		({RTS}:.p={EM}/{MRT}pc) -o > < \
		(.p:{TAIL}={EM}/{MLIB}pc) \
		(.b:{TAIL}={EM}/{LIB}bc) \
		(.ocm:{TAIL}={EM}/{MLIB}ocm) \
		(.ocm.b:{TAIL}={OLD_C_LIB}) \
		(.c:{TAIL}={C_LIB}) \
		{LIBFP?} \
		(.e:{TAIL}={EM}/{MLIB}mon {EM}/lib/minix/end_em)
	linker
end
name cv
	from .out
	to .cv
	program {EM}/lib/{M}/cv
	args < >
	outfile a.out
end
