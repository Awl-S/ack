# $Revision$
var w=2
var p=2
var s=2
var l=4
var f=4
var d=8
var NAME=xenix3_0
var M=xenix3.0
var LIB=lib/{M}/tail_
var ILIB=lib/i86/tail_
var RT=lib/{M}/head_
var IRT=lib/i86/head_
var CPP_F=-Dunix -D__USG
var INCLUDES=-I{EM}/include/_tail_cc
var ALIGN=-a0:2 -a1:2 -a2:2 -a3:2
name be
	from .m.g
	to .s
	program {EM}/lib/{M}/cg
	args <
	stdout
	need .e
end
name as
	from .s.so
	to .o
	program {EM}/lib/{M}/as
	args - -o > <
	prep cond
end
name led
	from .o.a
	to .out
	program {EM}/lib/em_led
	mapflag -l* LNAME={EM}/{LIB}*
	mapflag -i SEPID=-b1:0
	args {ALIGN} {SEPID?} (.e:{HEAD}={EM}/{RT}em) \
({RTS}:.ocm.b.c={EM}/{IRT}cc) ({RTS}:.p={EM}/{IRT}pc) -o > < \
		(.p:{TAIL}={EM}/{ILIB}pc) \
		(.b:{TAIL}={EM}/{ILIB}bc) \
		(.ocm:{TAIL}={EM}/{ILIB}ocm) \
		(.ocm.b.c:{TAIL}={EM}/{ILIB}cc.1s {EM}/{ILIB}cc.2g) \
		(.e:{TAIL}={EM}/{ILIB}em {EM}/{LIB}mon {EM}/lib/i86/end_em)
	linker
end
name cv
	from .out
	to .cv
	program {EM}/lib/{M}/cv
	args < >
	outfile a.out
end
